#ifndef DATABASE_H
#define DATABASE_H

#include <QComboBox>
#include <QDate>
#include <QDebug>
#include <QDir>
#include <QSqlDatabase>
#include <QSqlError>
#include <QSqlQuery>
#include <QString>
#include <QVariantMap>

class Database
{
public:
    struct OrderInfo {
        int orderId;
        QDateTime orderDate;
        double totalAmount;
        QMap<int, int> orderDetails; // dishID to quantity
        QString uid;
    };

    static bool setupDatabase(QString dbPath);

    // User table functions
    static bool insertUser(const QString &uid,
                           const QString &name,
                           const QString &phone,
                           const QString &year,
                           const QString &batch,
                           const QString &password);

    static QVariantMap getUserData(
        const QString &uid,
        const QString &password); // Obsolete (won't be used for security reasons)
    static QVariantMap getUserData(const QString &uid); // Get data with just username given
    static QVariantMap getUserData(); // Get data of user having logged_in=1

    static bool uidValid(const QString &uid, const QString &password); // Login page User Validation
    static bool uidValid(const QString &uid);

    static bool changePassword(const QString &uid, const QString &newPassword);

    static bool logout();

    static void setUserLoggedIn(const QString &uid);
    static bool checkLogged();

    static bool deleteUser(const QString &uid);

    static QVariantMap getItem(const int &id);

    // Order History Functions
    static bool insertOrder(const QString& uid, const QMap<int, int>& orderDetails, double totalAmount);
    static QList<OrderInfo> getOrderHistory(const QString& uid);

    //Cafe Interface Functions
    static void addItem(const QString &name,
                        const bool &is_vegetarian,
                        const QString &indicator1,
                        const QString &indicator2,
                        const QString &indicator3,
                        const double &price,
                        const int &available_qty);
    static void deleteItem(int id, QComboBox *deleteDD);

    static void updateItem(int id, double price, int qty);
    static void updateItem(int id, double price);
    static void updateItem(int id, int qty);

    static void populateDD(
        QComboBox *DD); // Function to populate QComboBox after retreiving data from the database

    static QVariantMap getDOTD();       // Function for home screen
    static QVariantMap getDOTD(int id); // Function for DOTD screen (id is generated by QComboBox)
    static bool insertDotdItems();
};

#endif // DATABASE_H
